{"version":3,"sources":["icon/attach.svg","icon/send-letter.svg","icon/chat-bubble.svg","icon/contacts.svg","icon/settings.svg","pfp.png","icon/Messaging2.svg","components/Logo.js","context/socket.js","components/styles.js","context/user.js","components/Login.js","components/Signup.js","components/ChatInput.js","components/Home.js","components/GoogleAuthPage.js","App.js","index.js","components/Elements.js","components/ChatElements.js"],"names":["module","exports","Logo","className","user","Container","styled","display","alignItems","justifyContent","Centered","height","ButtonGroup","minWidth","gridTemplateColumns","ButtonGroup2","UserContext","createContext","localStorage","window","JSON","parse","getItem","err","console","log","SocketContext","socket","io","autoConnect","auth","mobile_number","connect","SocketProvider","value","children","Provider","Login","useState","COUNTRIES","IN","country","setCountry","setMobileNumber","password","setPassword","isMobileNumberValid","setIsMobileNumberValid","isPasswordValid","setIsPasswordValid","isLoading","setIsLoading","history","useHistory","setUser","useContext","login","a","validator","isMobilePhone","dialCode","concat","strictMode","length","toast","error","fetch","method","credentials","headers","body","stringify","catch","rawResponse","json","content","success","setItem","setTimeout","push","placeholder","text","onCountryChange","option","onTextChange","e","currentTarget","size","SIZE","default","overrides","Input","style","$theme","marginBottom","type","onChange","onPass","Root","margin","onClick","kind","KIND","tertiary","width","opacity","minimal","Signup","name","setName","isNameValid","setIsNameValid","validateInput","flag","signup","ChatInput","handleMessageSend","setText","onSubmit","preventDefault","src","AttachIcon","target","SendIcon","Contacts","React","lazy","then","Chat","Profile","ChatBox","useStyles","makeStyles","theme","root","maxWidth","backgroundColor","palette","background","paper","med","spacing","large","Home","me","classes","users","setUsers","active","setActive","displayProfile","setDisplayProfile","messages","setMessages","db","Dexie","version","stores","allMessages","useLiveQuery","toArray","addMessage","from","to","side","add","useEffect","res","data","on","message","prevState","username","ChatLogo","ContactsLogo","SettingsLogo","ProfilePicture","fallback","List","component","aria-label","map","ListItem","button","selected","key","ListItemAvatar","Avatar","alt","avatar","ListItemText","primary","secondary","Fragment","Typography","variant","inline","color","ListItemIcon","require","draggable","ListItemSecondaryAction","emit","GoogleAuthPage","$as","href","BaseButton","App","exact","path","engine","Styletron","ReactDOM","render","LightTheme","document","getElementById","Center","div","Head","Icon","img","MenuItem","Pane","PFP","Row","ChatInputBox","form","Attach","Send","input","InfoBox","Title","Name","h3","Sub","p","Welcome","MessageSVG","TextLeft","TextRight"],"mappings":"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","file":"static/js/main.f45cdc2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/attach.7493c9fc.svg\";","module.exports = __webpack_public_path__ + \"static/media/send-letter.0b80f375.svg\";","module.exports = __webpack_public_path__ + \"static/media/chat-bubble.48b60e31.svg\";","module.exports = __webpack_public_path__ + \"static/media/contacts.3bc854df.svg\";","module.exports = __webpack_public_path__ + \"static/media/settings.410110b5.svg\";","module.exports = __webpack_public_path__ + \"static/media/pfp.557380c0.png\";","module.exports = __webpack_public_path__ + \"static/media/Messaging2.48e25c9e.svg\";","import React from 'react'\r\nimport './Logo.css'\r\n\r\nexport default function Logo() {\r\n    return (\r\n        <h1 className=\"logo\">Chatify</h1>\r\n    )\r\n}","import React, { createContext } from \"react\";\r\nimport { io } from \"socket.io-client\";\r\n\r\n\r\nconst localStorage = window.localStorage;\r\nlet user\r\ntry {\r\n    user = JSON.parse(localStorage.getItem(\"user\"));\r\n} catch(err) {\r\n    console.log(err);\r\n}\r\n\r\n\r\nconst SocketContext = createContext();\r\nconst socket = io(\"http://localhost:3000\", { autoConnect: false });\r\n\r\nif (user) {\r\n    // socket.emit(\"join\", { username: user.name, room: user.mobile_number }, (error) => {\r\n    //     if (error)\r\n    //         console.log(error)\r\n    // })\r\n    socket.auth = {mobile_number: user.mobile_number}\r\n    socket.connect();\r\n} else {\r\n    console.log(\"Socket connection not establised. no user.\");\r\n}\r\n\r\nconst SocketProvider = ({ value, children }) => {\r\n\r\n    return (\r\n        <SocketContext.Provider value={value}>\r\n            {children}\r\n        </SocketContext.Provider>\r\n    )\r\n}\r\n\r\nexport { socket, SocketProvider, SocketContext };","import { styled } from \"baseui\";\r\n\r\nconst Container = styled('div', {\r\n    display: 'grid',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n});\r\n\r\nconst Centered = styled('div', {\r\n    height: '100%',\r\n});\r\n\r\nconst ButtonGroup = styled('div', {\r\n    display: 'grid',\r\n    minWidth: '460px',\r\n    gridTemplateColumns: '1fr',\r\n})\r\n\r\nconst ButtonGroup2 = styled('div', {\r\n    display: 'grid',\r\n    minWidth: '460px',\r\n    gridTemplateColumns: '1fr 1fr',\r\n})\r\n\r\nexport {Container, Centered, ButtonGroup, ButtonGroup2};","import { createContext } from \"react\";\r\n\r\nexport const UserContext = createContext(null);","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { Button, KIND } from 'baseui/button'\r\nimport { Input } from 'baseui/input';\r\nimport {\r\n    PhoneInput,\r\n    COUNTRIES,\r\n    SIZE\r\n} from \"baseui/phone-input\";\r\n\r\nimport toast, { Toaster } from 'react-hot-toast';\r\nimport validator from \"validator\";\r\n\r\nimport Logo from './Logo'\r\nimport { Container, Centered, ButtonGroup, ButtonGroup2 } from \"./styles\";\r\nimport { UserContext } from '../context/user';\r\nimport { SocketContext } from '../context/socket';\r\n\r\nexport default function Login() {\r\n    const [country, setCountry] = useState(COUNTRIES.IN);\r\n    const [mobile_number, setMobileNumber] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [isMobileNumberValid, setIsMobileNumberValid] = useState(true);\r\n    const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const { setUser } = useContext(UserContext)\r\n    const socket = useContext(SocketContext);\r\n\r\n    const validateInput = () => {\r\n\r\n        mobile_number ? setIsMobileNumberValid(true) : setIsMobileNumberValid(false)\r\n        password ? setIsPasswordValid(true) : setIsPasswordValid(false);\r\n\r\n        // i don't want to display any toasts unless both\r\n        // input fields contain any input\r\n        // will show required label later\r\n        if (!mobile_number || !password) return false;\r\n\r\n        if (!validator.isMobilePhone(country.dialCode.concat(mobile_number), \"en-IN\", { strictMode: true })) {\r\n            toast.error(\"Invalid mobile number\");\r\n            setIsMobileNumberValid(false)\r\n            return false;\r\n        }\r\n\r\n        if (password.length < 8) {\r\n            toast.error(\"Password must have atleast 8 characters\");\r\n            setIsPasswordValid(false)\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    const login = async () => {\r\n\r\n        if (!validateInput()) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        const rawResponse = await fetch('/api/login', {\r\n            method: 'POST',\r\n            credentials: 'include',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ mobile_number: country.dialCode.concat(mobile_number), password }),\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            toast.error(\"Something went wrong. Please try again later.\");\r\n        });\r\n\r\n        if (rawResponse) {\r\n            let content;\r\n            try {\r\n                content = await rawResponse.json();\r\n                console.log(content);\r\n                if (content.error) {\r\n                    toast.error(content.error);\r\n                } else {\r\n                    toast.success(\"login successful!\");\r\n                    window.localStorage.setItem(\"isLoggedIn\", true);\r\n                    window.localStorage.setItem(\"user\", JSON.stringify(content))\r\n                    setUser(content)\r\n                    setTimeout(() => {\r\n                        socket.auth = { mobile_number: content.mobile_number }\r\n                        socket.connect();\r\n                        history.push(\"/\");\r\n                    }, 1500);\r\n                }\r\n            } catch (error) {\r\n                toast.error(\"Something went wrong. Please try again later.\")\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            toast.error(\"Something went wrong. Please try again later.\")\r\n            console.log(rawResponse);\r\n        }\r\n        \r\n\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Logo />\r\n            <Container>\r\n                <Centered>\r\n                    <PhoneInput\r\n                        placeholder=\"Mobile number\"\r\n                        text={mobile_number}\r\n                        country={country}\r\n                        onCountryChange={({ option }) => setCountry(option)}\r\n                        onTextChange={e => setMobileNumber(e.currentTarget.value)}\r\n                        size={SIZE.default}\r\n                        error={!isMobileNumberValid}\r\n                        overrides={{\r\n                            Input: {\r\n                                style: ({ $theme }) => {\r\n                                    return {\r\n                                        marginBottom: '10px',\r\n                                        minWidth: '460px',\r\n                                    };\r\n                                }\r\n                            }\r\n                        }}\r\n                    />\r\n                    <Input\r\n                        placeholder=\"Password\"\r\n                        type=\"password\"\r\n                        text={password}\r\n                        onChange={e => { setPassword(e.currentTarget.value) }}\r\n                        onPass\r\n                        error={!isPasswordValid}\r\n                        overrides={{\r\n                            Root: {\r\n                                style: ({ $theme }) => {\r\n                                    return {\r\n                                        margin: '10px 0px',\r\n                                        minWidth: '460px',\r\n                                    };\r\n                                }\r\n                            }\r\n                        }} />\r\n\r\n                    <ButtonGroup2>\r\n                        <Button onClick={login} isLoading={isLoading}> Login </Button>\r\n                        <Button kind={KIND.tertiary} onClick={e => history.push(\"signup\")}>\r\n                            Create New Account\r\n                        </Button>\r\n                    </ButtonGroup2>\r\n\r\n                    <ButtonGroup>\r\n                        <hr style={{ width: '100%', margin: '10px 0px', opacity: '0.5' }} />\r\n                        <Button kind={KIND.minimal}>\r\n                            Forgotten password?\r\n                        </Button>\r\n                    </ButtonGroup>\r\n\r\n                </Centered>\r\n\r\n            </Container>\r\n            <Toaster />\r\n        </>\r\n    );\r\n}","import React, { useState, useContext } from 'react'\r\nimport { useHistory } from \"react-router-dom\";\r\nimport validator from \"validator\";\r\nimport toast, { Toaster } from 'react-hot-toast';\r\n\r\nimport { Button, KIND } from 'baseui/button'\r\nimport { Input } from 'baseui/input';\r\nimport {\r\n    PhoneInput,\r\n    COUNTRIES,\r\n    SIZE\r\n} from \"baseui/phone-input\";\r\n\r\nimport Logo from './Logo'\r\nimport { Container, Centered, ButtonGroup2 } from \"./styles\"\r\nimport { SocketContext } from '../context/socket';\r\n\r\nexport default function Signup() {\r\n    const [country, setCountry] = useState(COUNTRIES.IN);\r\n    const [mobile_number, setMobileNumber] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n\r\n    const [isMobileNumberValid, setIsMobileNumberValid] = useState(true);\r\n    const [isPasswordValid, setIsPasswordValid] = useState(true);\r\n    const [isNameValid, setIsNameValid] = useState(true);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    const history = useHistory();\r\n    const socket = useContext(SocketContext);\r\n\r\n    const validateInput = () => {\r\n\r\n        let flag = true;\r\n\r\n        mobile_number ? setIsMobileNumberValid(true) : setIsMobileNumberValid(false)\r\n        password ? setIsPasswordValid(true) : setIsPasswordValid(false);\r\n        name ? setIsNameValid(true) : setIsNameValid(false);\r\n\r\n        if (!mobile_number || !password || !name) flag = false;\r\n\r\n        if (mobile_number && !validator.isMobilePhone(country.dialCode.concat(mobile_number), \"en-IN\", { strictMode: true })) {\r\n            toast.error(\"Invalid mobile number\");\r\n            setIsMobileNumberValid(false)\r\n            flag = false;\r\n        }\r\n\r\n        if (password && password.length < 8) {\r\n            toast.error(\"Password must have atleast 8 characters\");\r\n            setIsPasswordValid(false)\r\n            flag = false;\r\n        }\r\n\r\n        return flag;\r\n    }\r\n\r\n    const signup = async () => {\r\n        if (!validateInput()) return;\r\n\r\n        setIsLoading(true);\r\n\r\n        const rawResponse = await fetch('/api/register', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json'\r\n            },\r\n            credentials: \"include\",\r\n            body: JSON.stringify({ name, mobile_number: country.dialCode.concat(mobile_number), password })\r\n        }).catch((err) => {\r\n            console.log(err);\r\n            toast.error(\"Something went wrong. Please try again later.\");\r\n        });\r\n\r\n        if (rawResponse) {\r\n            let content;\r\n            try {\r\n                content = await rawResponse.json();\r\n                console.log(content);\r\n                if (content.error) {\r\n                    toast.error(content.error);\r\n                } else {\r\n                    toast.success(\"Registered successfully!\");\r\n                    window.localStorage.setItem(\"isLoggedIn\", true);\r\n                    window.localStorage.setItem(\"user\", JSON.stringify(content))\r\n                    setTimeout(() => {\r\n                        socket.auth = { mobile_number: content.mobile_number }\r\n                        socket.connect();\r\n                        history.push(\"/auth\");\r\n                    }, 1500);\r\n                }\r\n            } catch (error) {\r\n                toast.error(\"Something went wrong. Please try again later.\")\r\n                console.log(error);\r\n            }\r\n        } else {\r\n            toast.error(\"Something went wrong. Please try again later.\")\r\n            console.log(rawResponse);\r\n        }\r\n\r\n        setIsLoading(false);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Logo />\r\n            <Container>\r\n                <Centered>\r\n                    <Input\r\n                        placeholder=\"Name\"\r\n                        text={name}\r\n                        onChange={e => setName(e.currentTarget.value)}\r\n                        error={!isNameValid}\r\n                        overrides={{\r\n                            Root: {\r\n                                style: ({ $theme }) => {\r\n                                    return {\r\n                                        margin: '10px 0px',\r\n                                        minWidth: '460px',\r\n                                    };\r\n                                }\r\n                            }\r\n                        }} />\r\n                    <PhoneInput\r\n                        placeholder=\"Mobile number\"\r\n                        text={mobile_number}\r\n                        onTextChange={e => {\r\n                            setMobileNumber(e.currentTarget.value)\r\n                        }}\r\n                        country={country}\r\n                        onCountryChange={({ option }) => setCountry(option)}\r\n                        size={SIZE.default}\r\n                        error={!isMobileNumberValid}\r\n                    />\r\n                    <Input\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                        text={password}\r\n                        onChange={e => setPassword(e.currentTarget.value)}\r\n                        error={!isPasswordValid}\r\n                        overrides={{\r\n                            Root: {\r\n                                style: ({ $theme }) => {\r\n                                    return {\r\n                                        margin: '10px 0px',\r\n                                        minWidth: '460px',\r\n                                    };\r\n                                }\r\n                            }\r\n                        }} />\r\n\r\n                    <ButtonGroup2>\r\n                        <Button onClick={signup} isLoading={isLoading}>\r\n                            Sign Up\r\n                        </Button>\r\n                        <Button kind={KIND.tertiary} onClick={e => history.push(\"login\")}>\r\n                            Already Have an Account?\r\n                        </Button>\r\n                    </ButtonGroup2>\r\n\r\n                    <hr style={{ width: '100%', margin: '10px 0px', opacity: '0.5' }} />\r\n\r\n                </Centered>\r\n\r\n            </Container>\r\n            <Toaster />\r\n        </>\r\n    );\r\n}","import React, {useState} from \"react\";\r\nimport {ChatInputBox, Attach, Send, Input} from \"./Elements\";\r\nimport AttachIcon from \"../icon/attach.svg\";\r\nimport SendIcon from \"../icon/send-letter.svg\";\r\n\r\nconst ChatInput = ({handleMessageSend}) => {\r\n    \r\n    const [text, setText] = useState(\"\");\r\n    \r\n    return (\r\n        <ChatInputBox onSubmit={e => {\r\n                e.preventDefault()\r\n                handleMessageSend(text)\r\n                setText(\"\");\r\n            }}>\r\n            <Attach src={AttachIcon}/>\r\n            <Input placeholder=\"Write a message\" onChange={e => setText(e.target.value)} value={text}/>\r\n            <Send src={SendIcon}/>\r\n        </ChatInputBox>\r\n    )\r\n}\r\n\r\nexport default ChatInput;","import \"../App.css\";\r\nimport React, { useEffect, useState, useContext, Suspense } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { SocketContext } from \"../context/socket\";\r\n\r\nimport {\r\n    Center, Head, Pane, PFP, Row, Welcome, MessageSVG,\r\n    Icon, MenuItem, InfoBox, Title, Name, Sub, Container\r\n} from \"./Elements\";\r\nimport { TextLeft, TextRight } from \"./ChatElements\";\r\n// import sampleMessages from \"./sample messages\";\r\n\r\nimport ChatInput from \"./ChatInput\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport DraftsIcon from '@material-ui/icons/Drafts';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nimport ChatLogo from \"../icon/chat-bubble.svg\";\r\nimport ContactsLogo from \"../icon/contacts.svg\";\r\nimport SettingsLogo from \"../icon/settings.svg\";\r\nimport ProfilePicture from \"../pfp.png\";\r\n\r\nimport Dexie from 'dexie'\r\nimport { useLiveQuery } from \"dexie-react-hooks\";\r\n\r\nconst Contacts = React.lazy(() => import('./Elements').then(module => ({ default: module.Contacts })))\r\nconst Chat = React.lazy(() => import('./Elements').then(module => ({ default: module.Chat })))\r\nconst Profile = React.lazy(() => import('./Elements').then(module => ({ default: module.Profile })))\r\nconst ChatBox = React.lazy(() => import('./ChatElements').then(module => ({ default: module.ChatBox })))\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        backgroundColor: theme.palette.background.paper,\r\n    },\r\n    med: {\r\n        width: theme.spacing(6),\r\n        height: theme.spacing(6),\r\n    },\r\n    large: {\r\n        width: theme.spacing(18),\r\n        height: theme.spacing(18),\r\n    },\r\n}));\r\n\r\nexport const Home = () => {\r\n    const localStorage = window.localStorage;\r\n    const history = useHistory();\r\n    let me;\r\n    try {\r\n        me = JSON.parse(localStorage.getItem(\"user\"));\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n    \r\n\r\n    if (!me) {\r\n        console.log(\"please login\");\r\n        history.push(\"login\");\r\n\r\n    }\r\n\r\n    const socket = useContext(SocketContext);\r\n    const classes = useStyles();\r\n\r\n    const [users, setUsers] = useState([]);\r\n    const [active, setActive] = useState(\"\");\r\n    const [displayProfile, setDisplayProfile] = useState(false);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const db = new Dexie(\"chatify\");\r\n    db.version(1).stores(\r\n        { messages: \"++id,from,to,text,side\" }\r\n    )\r\n\r\n    const allMessages = useLiveQuery(() => db.messages.toArray(), []);\r\n    const addMessage = async ({ from, to, text, side }) => {\r\n        await db.messages.add({ from, to, text, side })\r\n    }\r\n\r\n    const handleMessageSend = (message) => {\r\n        setMessages([...messages, { side: \"right\", to: active.mobile_number, message, text: message, from: me.mobile_number }]);\r\n        socket.emit(\"message\", { from: me.mobile_number, to: active.mobile_number, message });\r\n        addMessage({ side: \"right\", to: active.mobile_number, message, text: message, from: me.mobile_number })\r\n    }\r\n\r\n    useEffect(() => {\r\n        console.log(\"AllMessages: \", allMessages);\r\n        fetch(\"/getusers\", {\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => { setUsers(data) });\r\n\r\n        socket.on(\"message\", (message) => {\r\n            console.log(message);\r\n            setMessages(prevState=> [...prevState, { side: message.username === me.mobile_number ? \"right\" : \"left\", ...message }]);\r\n            addMessage({ side: message.username === me.mobile_number ? \"right\" : \"left\", ...message })\r\n        })\r\n    }, [])\r\n\r\n    // useEffect(() => {\r\n    //     socket.on(\"message\", (message) => {\r\n    //         console.log(messages);\r\n    //         setMessages([...messages, { from: \"right\", text: message.text }]);\r\n    //     })\r\n    // }, [socket])\r\n\r\n    return (\r\n        <Row displayProfile={displayProfile}>\r\n            <Pane>\r\n                <Center>\r\n                    <MenuItem>\r\n                        <Icon src={ChatLogo} />\r\n              All Chats\r\n            </MenuItem>\r\n                    <MenuItem>\r\n                        <Icon src={ContactsLogo} />\r\n              Contacts\r\n            </MenuItem>\r\n                    <MenuItem>\r\n                        <Icon src={SettingsLogo} />\r\n              Settings\r\n            </MenuItem>\r\n\r\n                </Center>\r\n\r\n                <PFP src={ProfilePicture} />\r\n            </Pane>\r\n\r\n\r\n            <Suspense fallback={<div>Loading...</div>}>\r\n                <Contacts>\r\n\r\n                    <h2>Chats</h2>\r\n\r\n                    <div className={classes.root}>\r\n\r\n                        <List component=\"nav\" aria-label=\"main mailbox folders\">\r\n                            {\r\n                                users.map(user => {\r\n                                    return (\r\n                                        <ListItem\r\n                                            button\r\n                                            selected={user === active}\r\n                                            key={user.mobile_number}\r\n                                            onClick={e => setActive(user)}\r\n                                        >\r\n                                            <ListItemAvatar>\r\n                                                <Avatar alt={user.name} src={`${user.avatar}`} className={classes.med} />\r\n                                            </ListItemAvatar>\r\n                                            <ListItemText primary={user.name} secondary={\r\n                                                <React.Fragment>\r\n                                                    <Typography\r\n                                                        component=\"span\"\r\n                                                        variant=\"body2\"\r\n                                                        className={classes.inline}\r\n                                                        color=\"textPrimary\"\r\n                                                    >\r\n                                                        Ali Connors\r\n                          </Typography>\r\n                                                    {\" — I'll be in your neighborhood doing errands this…\"}\r\n                                                </React.Fragment>\r\n                                            } />\r\n                                        </ListItem>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                            <ListItem button>\r\n                                <ListItemIcon>\r\n                                    <DraftsIcon />\r\n                                </ListItemIcon>\r\n                                <ListItemText primary=\"Drafts\" />\r\n                            </ListItem>\r\n                        </List>\r\n                    </div>\r\n                </Contacts>\r\n            </Suspense>\r\n\r\n            {active === \"\" && <Welcome>\r\n                <MessageSVG src={require(\"../icon/Messaging2.svg\")} alt=\"nothing\" draggable=\"false\" />\r\n            </Welcome>}\r\n            {active !== \"\" && <Suspense fallback={<div>Loading...</div>}>\r\n                <Chat>\r\n                    <Head>\r\n                        <List>\r\n                            <ListItem button alignItems=\"flex-start\" onClick={() => setDisplayProfile(!displayProfile)}>\r\n                                <ListItemAvatar>\r\n                                    <Avatar alt={active.name} src={active.avatar} />\r\n                                </ListItemAvatar>\r\n                                <ListItemText\r\n                                    primary={active.name}\r\n                                    secondary=\"Last seen recently\"\r\n                                />\r\n                                <ListItemSecondaryAction />\r\n                            </ListItem>\r\n                        </List>\r\n                    </Head>\r\n                    <ChatBox>\r\n                        {\r\n                            allMessages.map(message => (\r\n                                message.from === active.mobile_number || message.to === active.mobile_number ?\r\n                                    <div> {\r\n                                        message.side === \"left\" ?\r\n                                            <TextLeft>{message.text}</TextLeft> :\r\n                                            <TextRight>{message.text}</TextRight>\r\n                                    }\r\n                                    </div> : null\r\n                            ))\r\n                        }\r\n\r\n                    </ChatBox>\r\n                    <Container>\r\n                        <ChatInput handleMessageSend={handleMessageSend} />\r\n                    </Container>\r\n\r\n                </Chat> </Suspense>}\r\n\r\n            {displayProfile && <Suspense fallback={<div>Loading...</div>}>\r\n                <Profile>\r\n                    <Avatar alt={active.name} src={active.avatar} className={classes.large} />\r\n                    <Name> {active.name} </Name>\r\n                    <Sub>Last seen recently </Sub>\r\n\r\n                    <InfoBox>\r\n                        <Title> Phone Number: </Title>\r\n                        {active.mobile_number}\r\n                    </InfoBox>\r\n                    <InfoBox>\r\n                        <Title> Status: </Title>\r\n                        {/* {active.company.bs} */}\r\n                        Anything\r\n                    </InfoBox>\r\n\r\n                </Profile>\r\n            </Suspense>\r\n            }\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from 'react'\r\nimport { Button, KIND } from 'baseui/button';\r\nimport {\r\n    Card,\r\n    StyledBody,\r\n    StyledAction\r\n} from \"baseui/card\";\r\n\r\nimport Logo from './Logo';\r\nimport { Centered, Container } from './styles';\r\n\r\nconst GoogleAuthPage = () => {\r\n    useEffect(() => {\r\n        fetch(\"/api/me\", {\r\n            credentials: \"include\"\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => console.log(data));\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <Logo />\r\n            <Container>\r\n                <Centered>\r\n\r\n                    <Card style={{ \"width\": \"50%\", \"margin\": \"auto\", }}>\r\n                        <StyledBody>\r\n                            In order to allow communication with your contacts chatify needs permission to access your Google contacts.\r\n                        </StyledBody>\r\n                        <StyledAction>\r\n                            <Button $as=\"a\" href=\"/auth/google\"\r\n                                overrides={{\r\n                                    BaseButton: { style: { width: \"90%\" } }\r\n                                }} kind={KIND.secondary}> Google </Button>\r\n                        </StyledAction>\r\n                    </Card>\r\n                    {/* <Notification overrides={{\r\n                        Body: { style: { width: '500px' } },\r\n                    }}>\r\n                        {() => {\r\n                            \"In order to allow communication with your contacts chatify needs permission to access your contacts. \"\r\n                        }}\r\n                    </Notification> */}\r\n                </Centered>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GoogleAuthPage\r\n","import React, { useState } from 'react';\nimport './App.css';\nimport Login from './components/Login'\nimport Signup from './components/Signup'\nimport { Route, Switch } from \"react-router-dom\";\nimport { Home } from './components/Home';\nimport { SocketProvider, socket } from \"./context/socket\";\nimport GoogleAuthPage from './components/GoogleAuthPage';\nimport { UserContext } from './context/user';\n\nfunction App() {\n\n  const [user, setUser] = useState();\n\n  return (\n    <UserContext.Provider value={{ user, setUser }}>\n      <SocketProvider value={socket}>\n        <Switch>\n          <Route exact path=\"/login\" component={Login} />\n          <Route exact path=\"/signup\" component={Signup} />\n          <Route exact path=\"/auth\" component={GoogleAuthPage} />\n          <Route exact path=\"/\" component={Home} />\n        </Switch>\n      </SocketProvider>\n    </UserContext.Provider>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider as StyletronProvider} from \"styletron-react\";\nimport {BaseProvider, LightTheme} from \"baseui\";\nimport {Client as Styletron} from \"styletron-engine-atomic\";\nimport {BrowserRouter} from \"react-router-dom\"\n\nconst engine = new Styletron();\n\nReactDOM.render(\n    <StyletronProvider value={engine}>\n        <BaseProvider theme={LightTheme}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </BaseProvider>\n    </StyletronProvider>,\n  document.getElementById('root')\n);","import styled from \"styled-components\"\r\n\r\nconst Center = styled.div`\r\n    text-align: center;\r\n    margin-top: 2vh;\r\n    font-size: 12px;\r\n`\r\nconst Chat = styled.div`\r\n    grid-area: chat;\r\n    display: grid;\r\n    margin: 0 0 0 16px;\r\n    grid-template-rows: 12% auto 12%;\r\n    height: 100vh;\r\n`\r\n\r\nconst Contacts = styled.div`\r\n    grid-area: contacts;\r\n    height: 100vh;\r\n    font-size: 10px;\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 0;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background: transparent;\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: transparent;\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #8888;\r\n    }\r\n`\r\n\r\nconst Head = styled.div`\r\n    background-color: white;\r\n`\r\n\r\nconst Icon = styled.img`\r\n    width: 30px;    \r\n    display: block;\r\n    margin: 0 auto;\r\n`\r\n\r\nconst MenuItem = styled.div`\r\n    padding: 8px;\r\n    transition: 0.2s;\r\n\r\n    &:hover {\r\n        background-color: #eee;\r\n    }\r\n`\r\n\r\nconst Pane = styled.div`\r\n    grid-area: pane;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100vh;\r\n`\r\n\r\nconst PFP = styled.img`\r\n    background-color: brown;\r\n    width: 40px;\r\n    height: 40px;\r\n    border-radius: 50%;\r\n    margin-top: auto;\r\n    margin-left: auto;\r\n    margin-right: auto;\r\n    margin-bottom: 3vh;\r\n    transition: 0.1s;\r\n    \r\n    &:hover {\r\n        box-shadow: 0 0px 5px #aaa;\r\n        border: none;\r\n        border-radius: 20%;\r\n        transform: scale(1.2);\r\n    }\r\n`\r\n\r\nconst Row = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 5% 25% auto;\r\n    grid-template-areas: \"pane contacts chat\";\r\n    min-width: 1100px;\r\n\r\n    ${({ displayProfile }) => displayProfile && `\r\n        grid-template-columns: 5% 25% auto 22%;\r\n        grid-template-areas: \"pane contacts chat profile\";\r\n    `}\r\n`\r\n\r\nconst Profile = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    grid-area: profile;\r\n    align-items: center;\r\n    margin-top: 4vh;\r\n    text-align: center;\r\n    /* justify-content: center; */\r\n`\r\n\r\nconst Container = styled.div`\r\n    background: #F3F6F9;\r\n`\r\n\r\nconst ChatInputBox = styled.form`\r\n    margin: 0 auto;\r\n    background: #fff;\r\n    width: 90%;\r\n    height: 80%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst Attach = styled.img`\r\n    margin: 8px;\r\n    opacity: 0.5;\r\n\r\n    &:hover {\r\n        opacity: 1;\r\n    }\r\n`\r\nconst Send = styled.img`\r\n    margin: 8px;\r\n\r\n    &:hover {\r\n        transform: scale(1.1);\r\n    }\r\n`\r\n\r\nconst Input = styled.input`\r\n    border: none;\r\n    outline: none;\r\n    background: #F3F6F9;\r\n    width: 90%;\r\n    padding: 16px;\r\n    border-radius: 20px;\r\n`\r\n\r\nconst InfoBox = styled.div`\r\n    width: 70%;\r\n    background: #F3F6F9;\r\n    margin: 20px;\r\n    margin-bottom: 0;\r\n    padding: 16px;\r\n    border-radius: 20px;\r\n    text-align: left;\r\n`\r\nconst Title = styled.div`\r\n    font-size: 12px;\r\n    margin-bottom: 2px;\r\n    opacity: 0.7;\r\n`\r\n\r\nconst Name = styled.h3`\r\n    margin-bottom: 0;\r\n    margin-top: 10px;\r\n`\r\n\r\nconst Sub = styled.p`\r\n    opacity: 0.7;\r\n    margin-top: 0;\r\n    font-size: 12px;\r\n`\r\n\r\nconst Welcome = styled.div`\r\n    width: 100%;\r\n    height: 100%;\r\n    /* background-image: linear-gradient(315deg, #b8c6db 0%, #f5f7fa 74%); */\r\n    background: #f5f7fa;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nconst MessageSVG = styled.img`\r\n  width: 40%;  \r\n`\r\n\r\nexport {\r\n    Center, Chat, Contacts, Head, Icon, MenuItem, Pane, PFP, Row, Profile,\r\n    ChatInputBox, Attach, Send, Input, InfoBox, Title, Name, Sub, Container, \r\n    Welcome, MessageSVG\r\n};","import styled from \"styled-components\";\r\n\r\nconst ChatBox = styled.div`\r\n    border-radius: 40px 40px 0 0;\r\n    background-color: #F3F6F9;\r\n    position: relative;\r\n\r\n    width: 100%;\r\n    margin: 0 auto;\r\n    padding: 28px;\r\n    box-sizing: border-box;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 0;\r\n    }\r\n\r\n    /* Track */\r\n    ::-webkit-scrollbar-track {\r\n        background: transparent;\r\n    }\r\n\r\n    /* Handle */\r\n    ::-webkit-scrollbar-thumb {\r\n        background: transparent;\r\n    }\r\n\r\n    /* Handle on hover */\r\n    ::-webkit-scrollbar-thumb:hover {\r\n        background: #8888;\r\n    }\r\n`\r\n\r\nconst TextLeft = styled.div`\r\n    width: fit-content;\r\n    max-width: 40%;\r\n    margin-top: auto;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n\r\n    background: white;\r\n    border-radius: 20px 20px 20px 0;\r\n`\r\nconst TextRight = styled.div`\r\n    width: fit-content;\r\n    max-width: 40%;\r\n    margin-top: auto;\r\n    margin-bottom: 10px;\r\n    padding: 10px;\r\n\r\n    background: #6028F2;\r\n    color: white;\r\n    border-radius: 20px 20px 0 20px;\r\n    margin-right: 0;\r\n    margin-left: auto;\r\n`\r\n\r\nexport { ChatBox, TextLeft, TextRight };"],"sourceRoot":""}